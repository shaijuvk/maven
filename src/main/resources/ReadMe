Yes, that's correct! You need to configure a database for your application to store and retrieve data. Here are the general steps to configure a database:

1. Choose a database management system (DBMS): You've already chosen MySQL, which is a popular and widely-used DBMS.
2. Install the database server: You need to install MySQL Server on your local machine or a remote server. You can download the Community Server edition from the official MySQL website.
3. Create a database: Once the server is installed, create a new database for your application. You can use the MySQL command-line tool or a GUI tool like phpMyAdmin to create a database.
4. Create a database user: Create a new user account for your application to use when connecting to the database. Make sure to grant the necessary privileges to the user.
5. Configure your application: Update your application's configuration file (e.g., application.properties or application.yml) with the database connection settings, including the database URL, username, password, and driver class name.

Here's an example of what your application.properties file might look like:

spring.datasource.url=jdbc:mysql://localhost:3306/mydb
spring.datasource.username=myuser
spring.datasource.password=mypassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

Remember to replace the placeholders (mydb, myuser, mypassword) with your actual database credentials and configuration.

If you need help with installing or configuring the database, feel free to ask!